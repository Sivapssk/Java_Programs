//Brute-Force
class Solution {
    public int maxDistance(int[] colors) {
        int mx=0;
        for(int i=0;i<colors.length-1;i++){
            for(int j=i+1;j<colors.length;j++){
                if(colors[i]!=colors[j]){
                    int res=Math.abs(j-i);
                    mx=Math.max(res,mx);
                }
            }
        }
        return mx;
        
    }
}
//optimal
class Solution {
    public int maxDistance(int[] colors) {
        int mx=0;
        int n=colors.length;
        for(int i=0;i<colors.length-1;i++){
            if(colors[i]!=colors[n-1]){
                int res=n-1-i;
                mx=Math.max(res,mx);
                break;
            }
        }
        for(int i=n-1;i>=1;i--){
            if(colors[0]!=colors[i]){
                int res=i;
                mx=Math.max(mx,res);
                break;
            }
        }
        return mx; 
    }
}
