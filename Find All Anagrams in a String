class Solution {
    public static boolean fun(HashMap <Character,Integer> hms,HashMap <Character,Integer> hmp){
        if(hms.size()!=hmp.size()){
            return false;
        }
        for(char key:hms.keySet()){
            if(!hmp.containsKey(key)){
                return false;
            }
            int b=hms.get(key);
            int c=hmp.get(key);
            if(b!=c){
                return false;
            }
        }
        return true;
    }
    public List<Integer> findAnagrams(String s, String p) {
        HashMap <Character,Integer> hms=new HashMap<>();
        HashMap <Character,Integer> hmp=new HashMap<>();
        ArrayList<Integer> al=new ArrayList<>();
        int k=p.length();
        for(int i=0;i<k;i++){
            char ch=p.charAt(i);
            hmp.put(ch,hmp.getOrDefault(ch,0)+1);
        }
        int l=0;
        for(int r=0;r<s.length();r++){
            char ch=s.charAt(r);
            hms.put(ch,hms.getOrDefault(ch,0)+1);
            if(r-l==k){
                char temp=s.charAt(l);
                hms.put(temp,hms.get(temp)-1);
                if(hms.get(temp)==0){
                    hms.remove(temp);
                }
                l++;
            }
            
            if(r-l+1==k){
                boolean a=fun(hms,hmp);
                if(a){
                    al.add(l);
                }
            }
        }
        return al;
    }
    
}
